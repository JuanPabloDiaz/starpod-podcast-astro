---
import { getEntry } from 'astro:content';

import FormattedDate from '../components/FormattedDate';
import Layout from '../layouts/Layout.astro';
import { getAllEpisodes } from '../lib/rss';

export async function getStaticPaths() {
  const allEpisodes = await getAllEpisodes();

  return allEpisodes.flatMap((episode) => {
    return [
      {
        params: { episode: episode.episodeNumber },
        props: { episode }
      },
      {
        params: { episode: episode.episodeSlug },
        props: { episode }
      }
    ];
  });
}

const { episode } = Astro.props;

let Transcript;

if (episode.episodeNumber && episode.episodeNumber !== 'Bonus') {
  // @ts-expect-error TODO: investigate this type error more
  Transcript = await getEntry('transcripts', episode.episodeNumber);
  if (Transcript) {
    const { Content } = await Transcript.render();
    Transcript = Content;
  }
}
---

<Layout title={episode.title}>
  <div class="relative z-10 px-8 lg:px-18">
    <FormattedDate date={new Date(episode.published)} />

    <h1
      class="mb-4 text-2xl font-bold text-light-text-heading lg:mb-6 lg:text-5xl dark:text-white"
    >
      {episode.episodeNumber}: {episode.title}
    </h1>

    <h3 class="mb-6 text-3xl font-bold text-light-text-heading dark:text-white">
      Show Notes
    </h3>

    <div
      class="prose prose-neutral mb-5 dark:prose-invert [&>h2:nth-of-type(3n)]:before:bg-violet-200 [&>h2:nth-of-type(3n+2)]:before:bg-indigo-200 [&>h2]:mt-12 [&>h2]:flex [&>h2]:items-center [&>h2]:font-mono [&>h2]:text-sm [&>h2]:font-medium [&>h2]:leading-7 [&>h2]:text-slate-900 [&>h2]:before:mr-3 [&>h2]:before:h-3 [&>h2]:before:w-1.5 [&>h2]:before:rounded-r-full [&>h2]:before:bg-cyan-200 [&>ul]:mt-6 [&>ul]:pl-5"
    >
      <Fragment set:html={episode.content} />
    </div>

    <h3 class="mb-6 text-3xl font-bold text-light-text-heading dark:text-white">
      Transcript
    </h3>

    {
      Transcript && (
        <article class="prose prose-neutral dark:prose-invert">
          <Transcript />
        </article>
      )
    }
  </div>
</Layout>
